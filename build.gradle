plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version

base {
    archivesName = project.archives_base_name
}

sourceSets {
    main {
        resources {
            srcDirs += ["src/generated/resources"]
        }
    }
}

allprojects {
    group = project.maven_group
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    tasks.compileJava {
        options.encoding = 'utf-8'
    }
    tasks.compileTestJava {
        options.encoding = 'utf-8'
    }
    repositories {
        mavenCentral()
        maven {
            url = "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.1'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'com.zaxxer:HikariCP:5.0.1'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

loom {
    runs {
        client {
            programArgs "--username", "${player_name}"
        }
    }
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "id": mod_id, "version": project.version,"name": mod_name,"description": mod_description
    }

    from('src/modding/resources')
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}